import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { DashboardLayout } from "@/components/layout/DashboardLayout";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle, } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, } from "@/components/ui/select";
import { Separator } from "@/components/ui/separator";
import { AlertTriangle, Clock, Download, Globe, HardDrive, Save, Shield, Volume2, Wifi, } from "lucide-react";
import { ThemeSettings } from "@/components/settings/ThemeSettings";
import { OrganizationSettings } from "@/components/settings/OrganizationSettings";
export function Settings() {
    const [notifications, setNotifications] = useState(true);
    const [autoUpdate, setAutoUpdate] = useState(true);
    const [timezone, setTimezone] = useState("UTC");
    const [language, setLanguage] = useState("en");
    const [volume, setVolume] = useState(80);
    return (_jsx(DashboardLayout, { children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("h1", { className: "text-2xl font-bold", children: "Settings" }), _jsxs(Button, { children: [_jsx(Save, { className: "mr-2 h-4 w-4" }), " Save Changes"] })] }), _jsxs(Tabs, { defaultValue: "general", children: [_jsxs(TabsList, { className: "grid w-full md:w-auto md:inline-grid grid-cols-2 md:grid-cols-7", children: [_jsx(TabsTrigger, { value: "organization", children: "Organization" }), _jsx(TabsTrigger, { value: "theme", children: "Theme" }), _jsx(TabsTrigger, { value: "general", children: "General" }), _jsx(TabsTrigger, { value: "audio", children: "Audio" }), _jsx(TabsTrigger, { value: "network", children: "Network" }), _jsx(TabsTrigger, { value: "security", children: "Security" }), _jsx(TabsTrigger, { value: "system", children: "System" })] }), _jsx(TabsContent, { value: "organization", className: "mt-6", children: _jsx(OrganizationSettings, {}) }), _jsx(TabsContent, { value: "theme", className: "mt-6", children: _jsx(ThemeSettings, {}) }), _jsx(TabsContent, { value: "general", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "General Settings" }), _jsx(CardDescription, { children: "Configure general system preferences" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "System Preferences" }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "notifications", children: "Notifications" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Enable system notifications" })] }), _jsx(Switch, { id: "notifications", checked: notifications, onCheckedChange: setNotifications })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Localization" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "language", children: "Language" }), _jsxs(Select, { value: language, onValueChange: setLanguage, children: [_jsx(SelectTrigger, { id: "language", children: _jsx(SelectValue, { placeholder: "Select language" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "en", children: "English" }), _jsx(SelectItem, { value: "es", children: "Spanish" }), _jsx(SelectItem, { value: "fr", children: "French" }), _jsx(SelectItem, { value: "de", children: "German" }), _jsx(SelectItem, { value: "zh", children: "Chinese" })] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "timezone", children: "Timezone" }), _jsxs(Select, { value: timezone, onValueChange: setTimezone, children: [_jsx(SelectTrigger, { id: "timezone", children: _jsx(SelectValue, { placeholder: "Select timezone" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "UTC", children: "UTC" }), _jsx(SelectItem, { value: "EST", children: "Eastern Time (EST)" }), _jsx(SelectItem, { value: "CST", children: "Central Time (CST)" }), _jsx(SelectItem, { value: "MST", children: "Mountain Time (MST)" }), _jsx(SelectItem, { value: "PST", children: "Pacific Time (PST)" })] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "date-format", children: "Date Format" }), _jsxs(Select, { defaultValue: "MM/DD/YYYY", children: [_jsx(SelectTrigger, { id: "date-format", children: _jsx(SelectValue, { placeholder: "Select date format" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "MM/DD/YYYY", children: "MM/DD/YYYY" }), _jsx(SelectItem, { value: "DD/MM/YYYY", children: "DD/MM/YYYY" }), _jsx(SelectItem, { value: "YYYY-MM-DD", children: "YYYY-MM-DD" })] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "time-format", children: "Time Format" }), _jsxs(Select, { defaultValue: "12h", children: [_jsx(SelectTrigger, { id: "time-format", children: _jsx(SelectValue, { placeholder: "Select time format" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "12h", children: "12-hour (AM/PM)" }), _jsx(SelectItem, { value: "24h", children: "24-hour" })] })] })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Notifications" }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { htmlFor: "notifications", children: "Enable Notifications" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Receive system notifications and alerts" })] }), _jsx(Switch, { id: "notifications", checked: notifications, onCheckedChange: setNotifications })] })] })] }), _jsx(CardFooter, { children: _jsx(Button, { className: "ml-auto", children: "Save Changes" }) })] }) }), _jsx(TabsContent, { value: "audio", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Audio Settings" }), _jsx(CardDescription, { children: "Configure audio output and presets" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Volume Controls" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx(Label, { htmlFor: "master-volume", children: "Master Volume" }), _jsxs("span", { className: "text-sm", children: [volume, "%"] })] }), _jsx("input", { type: "range", id: "master-volume", min: "0", max: "100", value: volume, onChange: (e) => setVolume(parseInt(e.target.value)), className: "w-full" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "announcement-volume", children: "Announcement Volume" }), _jsx("input", { type: "range", id: "announcement-volume", min: "0", max: "100", defaultValue: "90", className: "w-full" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "bell-volume", children: "Bell Volume" }), _jsx("input", { type: "range", id: "bell-volume", min: "0", max: "100", defaultValue: "85", className: "w-full" })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Audio Presets" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Configure the 60 available audio presets for use in announcements and schedules" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "border rounded-md p-4", children: [_jsx("h4", { className: "font-medium mb-2", children: "Preset Management" }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "preset-select", children: "Select Preset" }), _jsxs(Select, { defaultValue: "1", children: [_jsx(SelectTrigger, { id: "preset-select", children: _jsx(SelectValue, { placeholder: "Select preset" }) }), _jsx(SelectContent, { className: "max-h-[200px] overflow-y-auto", children: Array.from({ length: 60 }, (_, i) => i + 1).map((num) => (_jsxs(SelectItem, { value: num.toString(), children: ["Preset ", num] }, num))) })] })] }), _jsxs("div", { className: "grid gap-2 mt-4", children: [_jsx(Label, { htmlFor: "preset-name", children: "Preset Name" }), _jsx(Input, { id: "preset-name", defaultValue: "Morning Bell" })] }), _jsxs("div", { className: "grid gap-2 mt-4", children: [_jsx(Label, { htmlFor: "preset-file", children: "Audio File" }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Input, { id: "preset-file", value: "morning-bell.mp3", readOnly: true, className: "flex-1" }), _jsx(Button, { variant: "outline", size: "icon", children: _jsx(Download, { className: "h-4 w-4" }) })] })] }), _jsxs("div", { className: "flex justify-end mt-4", children: [_jsx(Button, { variant: "outline", className: "mr-2", children: "Test" }), _jsx(Button, { children: "Upload New" })] })] }), _jsxs("div", { className: "border rounded-md p-4", children: [_jsx("h4", { className: "font-medium mb-2", children: "Preset Library" }), _jsx("div", { className: "space-y-2 max-h-[200px] overflow-y-auto", children: [
                                                                            {
                                                                                id: 1,
                                                                                name: "Morning Bell",
                                                                                file: "morning-bell.mp3",
                                                                            },
                                                                            {
                                                                                id: 2,
                                                                                name: "Class Change",
                                                                                file: "class-change.mp3",
                                                                            },
                                                                            { id: 3, name: "Lunch Bell", file: "lunch-bell.mp3" },
                                                                            {
                                                                                id: 4,
                                                                                name: "Dismissal Bell",
                                                                                file: "dismissal.mp3",
                                                                            },
                                                                            {
                                                                                id: 5,
                                                                                name: "Emergency Tone",
                                                                                file: "emergency.mp3",
                                                                            },
                                                                            { id: 6, name: "Fire Drill", file: "fire-drill.mp3" },
                                                                            { id: 7, name: "Lockdown", file: "lockdown.mp3" },
                                                                            { id: 8, name: "All Clear", file: "all-clear.mp3" },
                                                                        ].map((preset) => (_jsxs("div", { className: "flex justify-between items-center p-2 border-b last:border-0", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: preset.name }), _jsx("p", { className: "text-xs text-muted-foreground", children: preset.file })] }), _jsx("div", { className: "flex gap-1", children: _jsx(Button, { variant: "ghost", size: "sm", children: _jsx(Volume2, { className: "h-3 w-3" }) }) })] }, preset.id))) })] })] })] })] }), _jsx(CardFooter, { children: _jsx(Button, { className: "ml-auto", children: "Save Changes" }) })] }) }), _jsx(TabsContent, { value: "network", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Network Settings" }), _jsx(CardDescription, { children: "Configure network and connectivity options" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Wireless Configuration" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "wifi-network", children: "Wi-Fi Network" }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Input, { id: "wifi-network", value: "School_Network", className: "flex-1" }), _jsxs(Button, { variant: "outline", children: [_jsx(Wifi, { className: "h-4 w-4 mr-2" }), " Scan"] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "wifi-password", children: "Password" }), _jsx(Input, { id: "wifi-password", type: "password", value: "\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Auto-Connect" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Automatically connect to known networks" })] }), _jsx(Switch, { defaultChecked: true })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Network Status" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "p-2 rounded-full bg-green-100 text-green-800", children: _jsx(Wifi, { className: "h-4 w-4" }) }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Connected" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "School_Network" })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "font-medium", children: "Signal Strength" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Excellent (90%)" })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "IP Address" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "192.168.1.105" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "MAC Address" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "00:1A:2B:3C:4D:5E" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "Gateway" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "192.168.1.1" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "DNS" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "8.8.8.8, 8.8.4.4" })] })] })] })] })] }), _jsxs(CardFooter, { children: [_jsxs(Button, { variant: "outline", className: "mr-auto", children: [_jsx(Globe, { className: "mr-2 h-4 w-4" }), " Test Connection"] }), _jsx(Button, { children: "Save Changes" })] })] }) }), _jsx(TabsContent, { value: "security", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Security Settings" }), _jsx(CardDescription, { children: "Configure security and access controls" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Access Control" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "admin-password", children: "Administrator Password" }), _jsx(Input, { id: "admin-password", type: "password", value: "\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Two-Factor Authentication" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Require additional verification for admin access" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Auto-Logout" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Automatically log out after period of inactivity" })] }), _jsx(Switch, { defaultChecked: true })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Emergency Access" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Emergency Override" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Allow emergency personnel to bypass security" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "emergency-code", children: "Emergency Access Code" }), _jsx(Input, { id: "emergency-code", value: "9876" })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "System Security" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Automatic Updates" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Automatically install security updates" })] }), _jsx(Switch, { checked: autoUpdate, onCheckedChange: setAutoUpdate })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Remote Access" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Allow remote management of the system" })] }), _jsx(Switch, { defaultChecked: false })] })] })] })] }), _jsxs(CardFooter, { children: [_jsxs(Button, { variant: "outline", className: "mr-auto", children: [_jsx(Shield, { className: "mr-2 h-4 w-4" }), " Security Audit"] }), _jsx(Button, { children: "Save Changes" })] })] }) }), _jsx(TabsContent, { value: "system", className: "mt-6", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "System Settings" }), _jsx(CardDescription, { children: "Configure system maintenance and backup options" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "System Information" }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "Software Version" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "TI-BOT v2.5.3" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "Hardware Model" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "TI-BOT Pro" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "Serial Number" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "TB-2023-78945612" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium", children: "Last Updated" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "May 15, 2023" })] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Storage" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("p", { className: "text-sm font-medium", children: "System Storage" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "45% used (9.0 GB / 20.0 GB)" })] }), _jsx("div", { className: "w-full h-2 bg-secondary rounded-full overflow-hidden", children: _jsx("div", { className: "bg-primary h-full rounded-full", style: { width: "45%" } }) })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Auto-Cleanup" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Automatically remove old logs and temporary files" })] }), _jsx(Switch, { defaultChecked: true })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Backup & Restore" }), _jsxs("div", { className: "grid gap-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "space-y-0.5", children: [_jsx(Label, { children: "Automatic Backups" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Create regular backups of system configuration" })] }), _jsx(Switch, { defaultChecked: true })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "backup-frequency", children: "Backup Frequency" }), _jsxs(Select, { defaultValue: "weekly", children: [_jsx(SelectTrigger, { id: "backup-frequency", children: _jsx(SelectValue, { placeholder: "Select frequency" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "daily", children: "Daily" }), _jsx(SelectItem, { value: "weekly", children: "Weekly" }), _jsx(SelectItem, { value: "monthly", children: "Monthly" })] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "backup-location", children: "Backup Location" }), _jsxs(Select, { defaultValue: "cloud", children: [_jsx(SelectTrigger, { id: "backup-location", children: _jsx(SelectValue, { placeholder: "Select location" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "local", children: "Local Storage" }), _jsx(SelectItem, { value: "cloud", children: "Cloud Storage" }), _jsx(SelectItem, { value: "network", children: "Network Drive" })] })] })] })] }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", className: "flex-1", children: [_jsx(HardDrive, { className: "mr-2 h-4 w-4" }), " Backup Now"] }), _jsxs(Button, { variant: "outline", className: "flex-1", children: [_jsx(Clock, { className: "mr-2 h-4 w-4" }), " Restore"] })] })] }), _jsx(Separator, {}), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Factory Reset" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Reset the system to factory defaults. This will erase all data and settings." }), _jsxs(Button, { variant: "destructive", children: [_jsx(AlertTriangle, { className: "mr-2 h-4 w-4" }), " Factory Reset"] })] })] }), _jsx(CardFooter, { children: _jsx(Button, { className: "ml-auto", children: "Save Changes" }) })] }) })] })] }) }));
}
export default Settings;
